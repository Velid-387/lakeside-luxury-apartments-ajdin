@use 'sass:color';
@use './variables' as v;

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: v.$breakpoint-xs) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: v.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: v.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: v.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: v.$breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: v.$breakpoint-xxl) { @content; }
  }
}

// Flexbox utility mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography mixins
@mixin heading-1 {
  font-family: v.$font-family-secondary;
  font-size: v.$font-size-xxl;
  font-weight: 700;
  line-height: 1.2;
  
  @include respond-to(md) {
    font-size: v.$font-size-display;
  }
}

@mixin heading-2 {
  font-family: v.$font-family-secondary;
  font-size: v.$font-size-xl;
  font-weight: 700;
  line-height: 1.3;
  
  @include respond-to(md) {
    font-size: v.$font-size-xxl;
  }
}

@mixin heading-3 {
  font-family: v.$font-family-secondary;
  font-size: v.$font-size-lg;
  font-weight: 600;
  line-height: 1.4;
  
  @include respond-to(md) {
    font-size: v.$font-size-xl;
  }
}

@mixin body-text {
  font-family: v.$font-family-primary;
  font-size: v.$font-size-base;
  line-height: 1.6;
}

// Button mixins
@mixin button-primary {
  display: inline-block;
  padding: v.$spacing-sm v.$spacing-lg;
  background-color: v.$primary-blue;
  color: v.$white;
  border: none;
  border-radius: v.$border-radius;
  font-family: v.$font-family-primary;
  font-weight: 600;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  transition: v.$transition-base;
  
  &:hover, &:focus {
    background-color: color.adjust(v.$primary-blue, $lightness: -10%);
    transform: translateY(-2px);
    box-shadow: v.$shadow;
  }
  
  &:active {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  display: inline-block;
  padding: v.$spacing-sm v.$spacing-lg;
  background-color: v.$white;
  color: v.$primary-blue;
  border: 2px solid v.$primary-blue;
  border-radius: v.$border-radius;
  font-family: v.$font-family-primary;
  font-weight: 600;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  transition: v.$transition-base;
  
  &:hover, &:focus {
    background-color: v.$primary-blue;
    color: v.$white;
    transform: translateY(-2px);
    box-shadow: v.$shadow;
  }
  
  &:active {
    transform: translateY(0);
  }
}

// Animation mixins
@mixin fade-in {
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  & {
    animation: fadeIn 0.6s ease-in-out;
  }
}

@mixin slide-up {
  @keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  & {
    animation: slideUp 0.5s ease-in-out;
  }
}

// Section and container mixins
@mixin section-padding {
  padding: v.$spacing-xl 0;
  
  @include respond-to(md) {
    padding: v.$spacing-xxl 0;
  }
}

@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 v.$spacing-md;
  box-sizing: border-box;
  overflow-x: hidden;
  
  @include respond-to(md) {
    padding: 0 v.$spacing-lg;
  }
} 